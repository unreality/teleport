// source: teleport/accesslist/v1/accesslist.proto
/**
 * @fileoverview
 * @enhanceable
 * @suppress {missingRequire} reports error on implicit type usages.
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!
/* eslint-disable */
// @ts-nocheck

var jspb = require('google-protobuf');
var goog = jspb;
var global = (function() { return this || window || global || self || Function('return this')(); }).call(null);

var google_protobuf_duration_pb = require('google-protobuf/google/protobuf/duration_pb.js');
goog.object.extend(proto, google_protobuf_duration_pb);
var google_protobuf_timestamp_pb = require('google-protobuf/google/protobuf/timestamp_pb.js');
goog.object.extend(proto, google_protobuf_timestamp_pb);
var teleport_header_v1_resourceheader_pb = require('../../../teleport/header/v1/resourceheader_pb.js');
goog.object.extend(proto, teleport_header_v1_resourceheader_pb);
var teleport_trait_v1_trait_pb = require('../../../teleport/trait/v1/trait_pb.js');
goog.object.extend(proto, teleport_trait_v1_trait_pb);
goog.exportSymbol('proto.teleport.accesslist.v1.AccessList', null, global);
goog.exportSymbol('proto.teleport.accesslist.v1.AccessListAudit', null, global);
goog.exportSymbol('proto.teleport.accesslist.v1.AccessListGrants', null, global);
goog.exportSymbol('proto.teleport.accesslist.v1.AccessListOwner', null, global);
goog.exportSymbol('proto.teleport.accesslist.v1.AccessListRequires', null, global);
goog.exportSymbol('proto.teleport.accesslist.v1.AccessListSpec', null, global);
goog.exportSymbol('proto.teleport.accesslist.v1.IneligibleStatus', null, global);
goog.exportSymbol('proto.teleport.accesslist.v1.Member', null, global);
goog.exportSymbol('proto.teleport.accesslist.v1.MemberSpec', null, global);
goog.exportSymbol('proto.teleport.accesslist.v1.Notifications', null, global);
goog.exportSymbol('proto.teleport.accesslist.v1.Recurrence', null, global);
goog.exportSymbol('proto.teleport.accesslist.v1.Review', null, global);
goog.exportSymbol('proto.teleport.accesslist.v1.ReviewChanges', null, global);
goog.exportSymbol('proto.teleport.accesslist.v1.ReviewDayOfMonth', null, global);
goog.exportSymbol('proto.teleport.accesslist.v1.ReviewFrequency', null, global);
goog.exportSymbol('proto.teleport.accesslist.v1.ReviewSpec', null, global);
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.teleport.accesslist.v1.AccessList = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.teleport.accesslist.v1.AccessList, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.teleport.accesslist.v1.AccessList.displayName = 'proto.teleport.accesslist.v1.AccessList';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.teleport.accesslist.v1.AccessListSpec = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.teleport.accesslist.v1.AccessListSpec.repeatedFields_, null);
};
goog.inherits(proto.teleport.accesslist.v1.AccessListSpec, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.teleport.accesslist.v1.AccessListSpec.displayName = 'proto.teleport.accesslist.v1.AccessListSpec';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.teleport.accesslist.v1.AccessListOwner = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.teleport.accesslist.v1.AccessListOwner, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.teleport.accesslist.v1.AccessListOwner.displayName = 'proto.teleport.accesslist.v1.AccessListOwner';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.teleport.accesslist.v1.AccessListAudit = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.teleport.accesslist.v1.AccessListAudit, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.teleport.accesslist.v1.AccessListAudit.displayName = 'proto.teleport.accesslist.v1.AccessListAudit';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.teleport.accesslist.v1.Recurrence = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.teleport.accesslist.v1.Recurrence, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.teleport.accesslist.v1.Recurrence.displayName = 'proto.teleport.accesslist.v1.Recurrence';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.teleport.accesslist.v1.Notifications = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.teleport.accesslist.v1.Notifications, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.teleport.accesslist.v1.Notifications.displayName = 'proto.teleport.accesslist.v1.Notifications';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.teleport.accesslist.v1.AccessListRequires = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.teleport.accesslist.v1.AccessListRequires.repeatedFields_, null);
};
goog.inherits(proto.teleport.accesslist.v1.AccessListRequires, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.teleport.accesslist.v1.AccessListRequires.displayName = 'proto.teleport.accesslist.v1.AccessListRequires';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.teleport.accesslist.v1.AccessListGrants = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.teleport.accesslist.v1.AccessListGrants.repeatedFields_, null);
};
goog.inherits(proto.teleport.accesslist.v1.AccessListGrants, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.teleport.accesslist.v1.AccessListGrants.displayName = 'proto.teleport.accesslist.v1.AccessListGrants';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.teleport.accesslist.v1.Member = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.teleport.accesslist.v1.Member, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.teleport.accesslist.v1.Member.displayName = 'proto.teleport.accesslist.v1.Member';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.teleport.accesslist.v1.MemberSpec = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.teleport.accesslist.v1.MemberSpec, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.teleport.accesslist.v1.MemberSpec.displayName = 'proto.teleport.accesslist.v1.MemberSpec';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.teleport.accesslist.v1.Review = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.teleport.accesslist.v1.Review, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.teleport.accesslist.v1.Review.displayName = 'proto.teleport.accesslist.v1.Review';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.teleport.accesslist.v1.ReviewSpec = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.teleport.accesslist.v1.ReviewSpec.repeatedFields_, null);
};
goog.inherits(proto.teleport.accesslist.v1.ReviewSpec, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.teleport.accesslist.v1.ReviewSpec.displayName = 'proto.teleport.accesslist.v1.ReviewSpec';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.teleport.accesslist.v1.ReviewChanges = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.teleport.accesslist.v1.ReviewChanges.repeatedFields_, null);
};
goog.inherits(proto.teleport.accesslist.v1.ReviewChanges, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.teleport.accesslist.v1.ReviewChanges.displayName = 'proto.teleport.accesslist.v1.ReviewChanges';
}



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.teleport.accesslist.v1.AccessList.prototype.toObject = function(opt_includeInstance) {
  return proto.teleport.accesslist.v1.AccessList.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.teleport.accesslist.v1.AccessList} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.teleport.accesslist.v1.AccessList.toObject = function(includeInstance, msg) {
  var f, obj = {
    header: (f = msg.getHeader()) && teleport_header_v1_resourceheader_pb.ResourceHeader.toObject(includeInstance, f),
    spec: (f = msg.getSpec()) && proto.teleport.accesslist.v1.AccessListSpec.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.teleport.accesslist.v1.AccessList}
 */
proto.teleport.accesslist.v1.AccessList.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.teleport.accesslist.v1.AccessList;
  return proto.teleport.accesslist.v1.AccessList.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.teleport.accesslist.v1.AccessList} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.teleport.accesslist.v1.AccessList}
 */
proto.teleport.accesslist.v1.AccessList.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new teleport_header_v1_resourceheader_pb.ResourceHeader;
      reader.readMessage(value,teleport_header_v1_resourceheader_pb.ResourceHeader.deserializeBinaryFromReader);
      msg.setHeader(value);
      break;
    case 2:
      var value = new proto.teleport.accesslist.v1.AccessListSpec;
      reader.readMessage(value,proto.teleport.accesslist.v1.AccessListSpec.deserializeBinaryFromReader);
      msg.setSpec(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.teleport.accesslist.v1.AccessList.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.teleport.accesslist.v1.AccessList.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.teleport.accesslist.v1.AccessList} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.teleport.accesslist.v1.AccessList.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getHeader();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      teleport_header_v1_resourceheader_pb.ResourceHeader.serializeBinaryToWriter
    );
  }
  f = message.getSpec();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.teleport.accesslist.v1.AccessListSpec.serializeBinaryToWriter
    );
  }
};


/**
 * optional teleport.header.v1.ResourceHeader header = 1;
 * @return {?proto.teleport.header.v1.ResourceHeader}
 */
proto.teleport.accesslist.v1.AccessList.prototype.getHeader = function() {
  return /** @type{?proto.teleport.header.v1.ResourceHeader} */ (
    jspb.Message.getWrapperField(this, teleport_header_v1_resourceheader_pb.ResourceHeader, 1));
};


/**
 * @param {?proto.teleport.header.v1.ResourceHeader|undefined} value
 * @return {!proto.teleport.accesslist.v1.AccessList} returns this
*/
proto.teleport.accesslist.v1.AccessList.prototype.setHeader = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.teleport.accesslist.v1.AccessList} returns this
 */
proto.teleport.accesslist.v1.AccessList.prototype.clearHeader = function() {
  return this.setHeader(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.teleport.accesslist.v1.AccessList.prototype.hasHeader = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional AccessListSpec spec = 2;
 * @return {?proto.teleport.accesslist.v1.AccessListSpec}
 */
proto.teleport.accesslist.v1.AccessList.prototype.getSpec = function() {
  return /** @type{?proto.teleport.accesslist.v1.AccessListSpec} */ (
    jspb.Message.getWrapperField(this, proto.teleport.accesslist.v1.AccessListSpec, 2));
};


/**
 * @param {?proto.teleport.accesslist.v1.AccessListSpec|undefined} value
 * @return {!proto.teleport.accesslist.v1.AccessList} returns this
*/
proto.teleport.accesslist.v1.AccessList.prototype.setSpec = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.teleport.accesslist.v1.AccessList} returns this
 */
proto.teleport.accesslist.v1.AccessList.prototype.clearSpec = function() {
  return this.setSpec(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.teleport.accesslist.v1.AccessList.prototype.hasSpec = function() {
  return jspb.Message.getField(this, 2) != null;
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.teleport.accesslist.v1.AccessListSpec.repeatedFields_ = [2];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.teleport.accesslist.v1.AccessListSpec.prototype.toObject = function(opt_includeInstance) {
  return proto.teleport.accesslist.v1.AccessListSpec.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.teleport.accesslist.v1.AccessListSpec} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.teleport.accesslist.v1.AccessListSpec.toObject = function(includeInstance, msg) {
  var f, obj = {
    description: jspb.Message.getFieldWithDefault(msg, 1, ""),
    ownersList: jspb.Message.toObjectList(msg.getOwnersList(),
    proto.teleport.accesslist.v1.AccessListOwner.toObject, includeInstance),
    audit: (f = msg.getAudit()) && proto.teleport.accesslist.v1.AccessListAudit.toObject(includeInstance, f),
    membershipRequires: (f = msg.getMembershipRequires()) && proto.teleport.accesslist.v1.AccessListRequires.toObject(includeInstance, f),
    ownershipRequires: (f = msg.getOwnershipRequires()) && proto.teleport.accesslist.v1.AccessListRequires.toObject(includeInstance, f),
    grants: (f = msg.getGrants()) && proto.teleport.accesslist.v1.AccessListGrants.toObject(includeInstance, f),
    title: jspb.Message.getFieldWithDefault(msg, 8, ""),
    membership: jspb.Message.getFieldWithDefault(msg, 9, ""),
    ownership: jspb.Message.getFieldWithDefault(msg, 10, ""),
    ownerGrants: (f = msg.getOwnerGrants()) && proto.teleport.accesslist.v1.AccessListGrants.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.teleport.accesslist.v1.AccessListSpec}
 */
proto.teleport.accesslist.v1.AccessListSpec.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.teleport.accesslist.v1.AccessListSpec;
  return proto.teleport.accesslist.v1.AccessListSpec.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.teleport.accesslist.v1.AccessListSpec} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.teleport.accesslist.v1.AccessListSpec}
 */
proto.teleport.accesslist.v1.AccessListSpec.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setDescription(value);
      break;
    case 2:
      var value = new proto.teleport.accesslist.v1.AccessListOwner;
      reader.readMessage(value,proto.teleport.accesslist.v1.AccessListOwner.deserializeBinaryFromReader);
      msg.addOwners(value);
      break;
    case 3:
      var value = new proto.teleport.accesslist.v1.AccessListAudit;
      reader.readMessage(value,proto.teleport.accesslist.v1.AccessListAudit.deserializeBinaryFromReader);
      msg.setAudit(value);
      break;
    case 4:
      var value = new proto.teleport.accesslist.v1.AccessListRequires;
      reader.readMessage(value,proto.teleport.accesslist.v1.AccessListRequires.deserializeBinaryFromReader);
      msg.setMembershipRequires(value);
      break;
    case 5:
      var value = new proto.teleport.accesslist.v1.AccessListRequires;
      reader.readMessage(value,proto.teleport.accesslist.v1.AccessListRequires.deserializeBinaryFromReader);
      msg.setOwnershipRequires(value);
      break;
    case 6:
      var value = new proto.teleport.accesslist.v1.AccessListGrants;
      reader.readMessage(value,proto.teleport.accesslist.v1.AccessListGrants.deserializeBinaryFromReader);
      msg.setGrants(value);
      break;
    case 8:
      var value = /** @type {string} */ (reader.readString());
      msg.setTitle(value);
      break;
    case 9:
      var value = /** @type {string} */ (reader.readString());
      msg.setMembership(value);
      break;
    case 10:
      var value = /** @type {string} */ (reader.readString());
      msg.setOwnership(value);
      break;
    case 11:
      var value = new proto.teleport.accesslist.v1.AccessListGrants;
      reader.readMessage(value,proto.teleport.accesslist.v1.AccessListGrants.deserializeBinaryFromReader);
      msg.setOwnerGrants(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.teleport.accesslist.v1.AccessListSpec.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.teleport.accesslist.v1.AccessListSpec.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.teleport.accesslist.v1.AccessListSpec} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.teleport.accesslist.v1.AccessListSpec.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getDescription();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getOwnersList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      2,
      f,
      proto.teleport.accesslist.v1.AccessListOwner.serializeBinaryToWriter
    );
  }
  f = message.getAudit();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      proto.teleport.accesslist.v1.AccessListAudit.serializeBinaryToWriter
    );
  }
  f = message.getMembershipRequires();
  if (f != null) {
    writer.writeMessage(
      4,
      f,
      proto.teleport.accesslist.v1.AccessListRequires.serializeBinaryToWriter
    );
  }
  f = message.getOwnershipRequires();
  if (f != null) {
    writer.writeMessage(
      5,
      f,
      proto.teleport.accesslist.v1.AccessListRequires.serializeBinaryToWriter
    );
  }
  f = message.getGrants();
  if (f != null) {
    writer.writeMessage(
      6,
      f,
      proto.teleport.accesslist.v1.AccessListGrants.serializeBinaryToWriter
    );
  }
  f = message.getTitle();
  if (f.length > 0) {
    writer.writeString(
      8,
      f
    );
  }
  f = message.getMembership();
  if (f.length > 0) {
    writer.writeString(
      9,
      f
    );
  }
  f = message.getOwnership();
  if (f.length > 0) {
    writer.writeString(
      10,
      f
    );
  }
  f = message.getOwnerGrants();
  if (f != null) {
    writer.writeMessage(
      11,
      f,
      proto.teleport.accesslist.v1.AccessListGrants.serializeBinaryToWriter
    );
  }
};


/**
 * optional string description = 1;
 * @return {string}
 */
proto.teleport.accesslist.v1.AccessListSpec.prototype.getDescription = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.teleport.accesslist.v1.AccessListSpec} returns this
 */
proto.teleport.accesslist.v1.AccessListSpec.prototype.setDescription = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * repeated AccessListOwner owners = 2;
 * @return {!Array<!proto.teleport.accesslist.v1.AccessListOwner>}
 */
proto.teleport.accesslist.v1.AccessListSpec.prototype.getOwnersList = function() {
  return /** @type{!Array<!proto.teleport.accesslist.v1.AccessListOwner>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.teleport.accesslist.v1.AccessListOwner, 2));
};


/**
 * @param {!Array<!proto.teleport.accesslist.v1.AccessListOwner>} value
 * @return {!proto.teleport.accesslist.v1.AccessListSpec} returns this
*/
proto.teleport.accesslist.v1.AccessListSpec.prototype.setOwnersList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 2, value);
};


/**
 * @param {!proto.teleport.accesslist.v1.AccessListOwner=} opt_value
 * @param {number=} opt_index
 * @return {!proto.teleport.accesslist.v1.AccessListOwner}
 */
proto.teleport.accesslist.v1.AccessListSpec.prototype.addOwners = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 2, opt_value, proto.teleport.accesslist.v1.AccessListOwner, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.teleport.accesslist.v1.AccessListSpec} returns this
 */
proto.teleport.accesslist.v1.AccessListSpec.prototype.clearOwnersList = function() {
  return this.setOwnersList([]);
};


/**
 * optional AccessListAudit audit = 3;
 * @return {?proto.teleport.accesslist.v1.AccessListAudit}
 */
proto.teleport.accesslist.v1.AccessListSpec.prototype.getAudit = function() {
  return /** @type{?proto.teleport.accesslist.v1.AccessListAudit} */ (
    jspb.Message.getWrapperField(this, proto.teleport.accesslist.v1.AccessListAudit, 3));
};


/**
 * @param {?proto.teleport.accesslist.v1.AccessListAudit|undefined} value
 * @return {!proto.teleport.accesslist.v1.AccessListSpec} returns this
*/
proto.teleport.accesslist.v1.AccessListSpec.prototype.setAudit = function(value) {
  return jspb.Message.setWrapperField(this, 3, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.teleport.accesslist.v1.AccessListSpec} returns this
 */
proto.teleport.accesslist.v1.AccessListSpec.prototype.clearAudit = function() {
  return this.setAudit(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.teleport.accesslist.v1.AccessListSpec.prototype.hasAudit = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional AccessListRequires membership_requires = 4;
 * @return {?proto.teleport.accesslist.v1.AccessListRequires}
 */
proto.teleport.accesslist.v1.AccessListSpec.prototype.getMembershipRequires = function() {
  return /** @type{?proto.teleport.accesslist.v1.AccessListRequires} */ (
    jspb.Message.getWrapperField(this, proto.teleport.accesslist.v1.AccessListRequires, 4));
};


/**
 * @param {?proto.teleport.accesslist.v1.AccessListRequires|undefined} value
 * @return {!proto.teleport.accesslist.v1.AccessListSpec} returns this
*/
proto.teleport.accesslist.v1.AccessListSpec.prototype.setMembershipRequires = function(value) {
  return jspb.Message.setWrapperField(this, 4, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.teleport.accesslist.v1.AccessListSpec} returns this
 */
proto.teleport.accesslist.v1.AccessListSpec.prototype.clearMembershipRequires = function() {
  return this.setMembershipRequires(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.teleport.accesslist.v1.AccessListSpec.prototype.hasMembershipRequires = function() {
  return jspb.Message.getField(this, 4) != null;
};


/**
 * optional AccessListRequires ownership_requires = 5;
 * @return {?proto.teleport.accesslist.v1.AccessListRequires}
 */
proto.teleport.accesslist.v1.AccessListSpec.prototype.getOwnershipRequires = function() {
  return /** @type{?proto.teleport.accesslist.v1.AccessListRequires} */ (
    jspb.Message.getWrapperField(this, proto.teleport.accesslist.v1.AccessListRequires, 5));
};


/**
 * @param {?proto.teleport.accesslist.v1.AccessListRequires|undefined} value
 * @return {!proto.teleport.accesslist.v1.AccessListSpec} returns this
*/
proto.teleport.accesslist.v1.AccessListSpec.prototype.setOwnershipRequires = function(value) {
  return jspb.Message.setWrapperField(this, 5, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.teleport.accesslist.v1.AccessListSpec} returns this
 */
proto.teleport.accesslist.v1.AccessListSpec.prototype.clearOwnershipRequires = function() {
  return this.setOwnershipRequires(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.teleport.accesslist.v1.AccessListSpec.prototype.hasOwnershipRequires = function() {
  return jspb.Message.getField(this, 5) != null;
};


/**
 * optional AccessListGrants grants = 6;
 * @return {?proto.teleport.accesslist.v1.AccessListGrants}
 */
proto.teleport.accesslist.v1.AccessListSpec.prototype.getGrants = function() {
  return /** @type{?proto.teleport.accesslist.v1.AccessListGrants} */ (
    jspb.Message.getWrapperField(this, proto.teleport.accesslist.v1.AccessListGrants, 6));
};


/**
 * @param {?proto.teleport.accesslist.v1.AccessListGrants|undefined} value
 * @return {!proto.teleport.accesslist.v1.AccessListSpec} returns this
*/
proto.teleport.accesslist.v1.AccessListSpec.prototype.setGrants = function(value) {
  return jspb.Message.setWrapperField(this, 6, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.teleport.accesslist.v1.AccessListSpec} returns this
 */
proto.teleport.accesslist.v1.AccessListSpec.prototype.clearGrants = function() {
  return this.setGrants(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.teleport.accesslist.v1.AccessListSpec.prototype.hasGrants = function() {
  return jspb.Message.getField(this, 6) != null;
};


/**
 * optional string title = 8;
 * @return {string}
 */
proto.teleport.accesslist.v1.AccessListSpec.prototype.getTitle = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 8, ""));
};


/**
 * @param {string} value
 * @return {!proto.teleport.accesslist.v1.AccessListSpec} returns this
 */
proto.teleport.accesslist.v1.AccessListSpec.prototype.setTitle = function(value) {
  return jspb.Message.setProto3StringField(this, 8, value);
};


/**
 * optional string membership = 9;
 * @return {string}
 */
proto.teleport.accesslist.v1.AccessListSpec.prototype.getMembership = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 9, ""));
};


/**
 * @param {string} value
 * @return {!proto.teleport.accesslist.v1.AccessListSpec} returns this
 */
proto.teleport.accesslist.v1.AccessListSpec.prototype.setMembership = function(value) {
  return jspb.Message.setProto3StringField(this, 9, value);
};


/**
 * optional string ownership = 10;
 * @return {string}
 */
proto.teleport.accesslist.v1.AccessListSpec.prototype.getOwnership = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 10, ""));
};


/**
 * @param {string} value
 * @return {!proto.teleport.accesslist.v1.AccessListSpec} returns this
 */
proto.teleport.accesslist.v1.AccessListSpec.prototype.setOwnership = function(value) {
  return jspb.Message.setProto3StringField(this, 10, value);
};


/**
 * optional AccessListGrants owner_grants = 11;
 * @return {?proto.teleport.accesslist.v1.AccessListGrants}
 */
proto.teleport.accesslist.v1.AccessListSpec.prototype.getOwnerGrants = function() {
  return /** @type{?proto.teleport.accesslist.v1.AccessListGrants} */ (
    jspb.Message.getWrapperField(this, proto.teleport.accesslist.v1.AccessListGrants, 11));
};


/**
 * @param {?proto.teleport.accesslist.v1.AccessListGrants|undefined} value
 * @return {!proto.teleport.accesslist.v1.AccessListSpec} returns this
*/
proto.teleport.accesslist.v1.AccessListSpec.prototype.setOwnerGrants = function(value) {
  return jspb.Message.setWrapperField(this, 11, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.teleport.accesslist.v1.AccessListSpec} returns this
 */
proto.teleport.accesslist.v1.AccessListSpec.prototype.clearOwnerGrants = function() {
  return this.setOwnerGrants(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.teleport.accesslist.v1.AccessListSpec.prototype.hasOwnerGrants = function() {
  return jspb.Message.getField(this, 11) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.teleport.accesslist.v1.AccessListOwner.prototype.toObject = function(opt_includeInstance) {
  return proto.teleport.accesslist.v1.AccessListOwner.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.teleport.accesslist.v1.AccessListOwner} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.teleport.accesslist.v1.AccessListOwner.toObject = function(includeInstance, msg) {
  var f, obj = {
    name: jspb.Message.getFieldWithDefault(msg, 1, ""),
    description: jspb.Message.getFieldWithDefault(msg, 2, ""),
    ineligibleStatus: jspb.Message.getFieldWithDefault(msg, 3, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.teleport.accesslist.v1.AccessListOwner}
 */
proto.teleport.accesslist.v1.AccessListOwner.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.teleport.accesslist.v1.AccessListOwner;
  return proto.teleport.accesslist.v1.AccessListOwner.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.teleport.accesslist.v1.AccessListOwner} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.teleport.accesslist.v1.AccessListOwner}
 */
proto.teleport.accesslist.v1.AccessListOwner.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setName(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setDescription(value);
      break;
    case 3:
      var value = /** @type {!proto.teleport.accesslist.v1.IneligibleStatus} */ (reader.readEnum());
      msg.setIneligibleStatus(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.teleport.accesslist.v1.AccessListOwner.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.teleport.accesslist.v1.AccessListOwner.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.teleport.accesslist.v1.AccessListOwner} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.teleport.accesslist.v1.AccessListOwner.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getName();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getDescription();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getIneligibleStatus();
  if (f !== 0.0) {
    writer.writeEnum(
      3,
      f
    );
  }
};


/**
 * optional string name = 1;
 * @return {string}
 */
proto.teleport.accesslist.v1.AccessListOwner.prototype.getName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.teleport.accesslist.v1.AccessListOwner} returns this
 */
proto.teleport.accesslist.v1.AccessListOwner.prototype.setName = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string description = 2;
 * @return {string}
 */
proto.teleport.accesslist.v1.AccessListOwner.prototype.getDescription = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.teleport.accesslist.v1.AccessListOwner} returns this
 */
proto.teleport.accesslist.v1.AccessListOwner.prototype.setDescription = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional IneligibleStatus ineligible_status = 3;
 * @return {!proto.teleport.accesslist.v1.IneligibleStatus}
 */
proto.teleport.accesslist.v1.AccessListOwner.prototype.getIneligibleStatus = function() {
  return /** @type {!proto.teleport.accesslist.v1.IneligibleStatus} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {!proto.teleport.accesslist.v1.IneligibleStatus} value
 * @return {!proto.teleport.accesslist.v1.AccessListOwner} returns this
 */
proto.teleport.accesslist.v1.AccessListOwner.prototype.setIneligibleStatus = function(value) {
  return jspb.Message.setProto3EnumField(this, 3, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.teleport.accesslist.v1.AccessListAudit.prototype.toObject = function(opt_includeInstance) {
  return proto.teleport.accesslist.v1.AccessListAudit.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.teleport.accesslist.v1.AccessListAudit} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.teleport.accesslist.v1.AccessListAudit.toObject = function(includeInstance, msg) {
  var f, obj = {
    nextAuditDate: (f = msg.getNextAuditDate()) && google_protobuf_timestamp_pb.Timestamp.toObject(includeInstance, f),
    recurrence: (f = msg.getRecurrence()) && proto.teleport.accesslist.v1.Recurrence.toObject(includeInstance, f),
    notifications: (f = msg.getNotifications()) && proto.teleport.accesslist.v1.Notifications.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.teleport.accesslist.v1.AccessListAudit}
 */
proto.teleport.accesslist.v1.AccessListAudit.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.teleport.accesslist.v1.AccessListAudit;
  return proto.teleport.accesslist.v1.AccessListAudit.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.teleport.accesslist.v1.AccessListAudit} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.teleport.accesslist.v1.AccessListAudit}
 */
proto.teleport.accesslist.v1.AccessListAudit.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 2:
      var value = new google_protobuf_timestamp_pb.Timestamp;
      reader.readMessage(value,google_protobuf_timestamp_pb.Timestamp.deserializeBinaryFromReader);
      msg.setNextAuditDate(value);
      break;
    case 3:
      var value = new proto.teleport.accesslist.v1.Recurrence;
      reader.readMessage(value,proto.teleport.accesslist.v1.Recurrence.deserializeBinaryFromReader);
      msg.setRecurrence(value);
      break;
    case 4:
      var value = new proto.teleport.accesslist.v1.Notifications;
      reader.readMessage(value,proto.teleport.accesslist.v1.Notifications.deserializeBinaryFromReader);
      msg.setNotifications(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.teleport.accesslist.v1.AccessListAudit.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.teleport.accesslist.v1.AccessListAudit.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.teleport.accesslist.v1.AccessListAudit} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.teleport.accesslist.v1.AccessListAudit.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getNextAuditDate();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      google_protobuf_timestamp_pb.Timestamp.serializeBinaryToWriter
    );
  }
  f = message.getRecurrence();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      proto.teleport.accesslist.v1.Recurrence.serializeBinaryToWriter
    );
  }
  f = message.getNotifications();
  if (f != null) {
    writer.writeMessage(
      4,
      f,
      proto.teleport.accesslist.v1.Notifications.serializeBinaryToWriter
    );
  }
};


/**
 * optional google.protobuf.Timestamp next_audit_date = 2;
 * @return {?proto.google.protobuf.Timestamp}
 */
proto.teleport.accesslist.v1.AccessListAudit.prototype.getNextAuditDate = function() {
  return /** @type{?proto.google.protobuf.Timestamp} */ (
    jspb.Message.getWrapperField(this, google_protobuf_timestamp_pb.Timestamp, 2));
};


/**
 * @param {?proto.google.protobuf.Timestamp|undefined} value
 * @return {!proto.teleport.accesslist.v1.AccessListAudit} returns this
*/
proto.teleport.accesslist.v1.AccessListAudit.prototype.setNextAuditDate = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.teleport.accesslist.v1.AccessListAudit} returns this
 */
proto.teleport.accesslist.v1.AccessListAudit.prototype.clearNextAuditDate = function() {
  return this.setNextAuditDate(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.teleport.accesslist.v1.AccessListAudit.prototype.hasNextAuditDate = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional Recurrence recurrence = 3;
 * @return {?proto.teleport.accesslist.v1.Recurrence}
 */
proto.teleport.accesslist.v1.AccessListAudit.prototype.getRecurrence = function() {
  return /** @type{?proto.teleport.accesslist.v1.Recurrence} */ (
    jspb.Message.getWrapperField(this, proto.teleport.accesslist.v1.Recurrence, 3));
};


/**
 * @param {?proto.teleport.accesslist.v1.Recurrence|undefined} value
 * @return {!proto.teleport.accesslist.v1.AccessListAudit} returns this
*/
proto.teleport.accesslist.v1.AccessListAudit.prototype.setRecurrence = function(value) {
  return jspb.Message.setWrapperField(this, 3, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.teleport.accesslist.v1.AccessListAudit} returns this
 */
proto.teleport.accesslist.v1.AccessListAudit.prototype.clearRecurrence = function() {
  return this.setRecurrence(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.teleport.accesslist.v1.AccessListAudit.prototype.hasRecurrence = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional Notifications notifications = 4;
 * @return {?proto.teleport.accesslist.v1.Notifications}
 */
proto.teleport.accesslist.v1.AccessListAudit.prototype.getNotifications = function() {
  return /** @type{?proto.teleport.accesslist.v1.Notifications} */ (
    jspb.Message.getWrapperField(this, proto.teleport.accesslist.v1.Notifications, 4));
};


/**
 * @param {?proto.teleport.accesslist.v1.Notifications|undefined} value
 * @return {!proto.teleport.accesslist.v1.AccessListAudit} returns this
*/
proto.teleport.accesslist.v1.AccessListAudit.prototype.setNotifications = function(value) {
  return jspb.Message.setWrapperField(this, 4, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.teleport.accesslist.v1.AccessListAudit} returns this
 */
proto.teleport.accesslist.v1.AccessListAudit.prototype.clearNotifications = function() {
  return this.setNotifications(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.teleport.accesslist.v1.AccessListAudit.prototype.hasNotifications = function() {
  return jspb.Message.getField(this, 4) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.teleport.accesslist.v1.Recurrence.prototype.toObject = function(opt_includeInstance) {
  return proto.teleport.accesslist.v1.Recurrence.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.teleport.accesslist.v1.Recurrence} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.teleport.accesslist.v1.Recurrence.toObject = function(includeInstance, msg) {
  var f, obj = {
    frequency: jspb.Message.getFieldWithDefault(msg, 1, 0),
    dayOfMonth: jspb.Message.getFieldWithDefault(msg, 2, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.teleport.accesslist.v1.Recurrence}
 */
proto.teleport.accesslist.v1.Recurrence.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.teleport.accesslist.v1.Recurrence;
  return proto.teleport.accesslist.v1.Recurrence.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.teleport.accesslist.v1.Recurrence} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.teleport.accesslist.v1.Recurrence}
 */
proto.teleport.accesslist.v1.Recurrence.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {!proto.teleport.accesslist.v1.ReviewFrequency} */ (reader.readEnum());
      msg.setFrequency(value);
      break;
    case 2:
      var value = /** @type {!proto.teleport.accesslist.v1.ReviewDayOfMonth} */ (reader.readEnum());
      msg.setDayOfMonth(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.teleport.accesslist.v1.Recurrence.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.teleport.accesslist.v1.Recurrence.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.teleport.accesslist.v1.Recurrence} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.teleport.accesslist.v1.Recurrence.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getFrequency();
  if (f !== 0.0) {
    writer.writeEnum(
      1,
      f
    );
  }
  f = message.getDayOfMonth();
  if (f !== 0.0) {
    writer.writeEnum(
      2,
      f
    );
  }
};


/**
 * optional ReviewFrequency frequency = 1;
 * @return {!proto.teleport.accesslist.v1.ReviewFrequency}
 */
proto.teleport.accesslist.v1.Recurrence.prototype.getFrequency = function() {
  return /** @type {!proto.teleport.accesslist.v1.ReviewFrequency} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {!proto.teleport.accesslist.v1.ReviewFrequency} value
 * @return {!proto.teleport.accesslist.v1.Recurrence} returns this
 */
proto.teleport.accesslist.v1.Recurrence.prototype.setFrequency = function(value) {
  return jspb.Message.setProto3EnumField(this, 1, value);
};


/**
 * optional ReviewDayOfMonth day_of_month = 2;
 * @return {!proto.teleport.accesslist.v1.ReviewDayOfMonth}
 */
proto.teleport.accesslist.v1.Recurrence.prototype.getDayOfMonth = function() {
  return /** @type {!proto.teleport.accesslist.v1.ReviewDayOfMonth} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {!proto.teleport.accesslist.v1.ReviewDayOfMonth} value
 * @return {!proto.teleport.accesslist.v1.Recurrence} returns this
 */
proto.teleport.accesslist.v1.Recurrence.prototype.setDayOfMonth = function(value) {
  return jspb.Message.setProto3EnumField(this, 2, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.teleport.accesslist.v1.Notifications.prototype.toObject = function(opt_includeInstance) {
  return proto.teleport.accesslist.v1.Notifications.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.teleport.accesslist.v1.Notifications} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.teleport.accesslist.v1.Notifications.toObject = function(includeInstance, msg) {
  var f, obj = {
    start: (f = msg.getStart()) && google_protobuf_duration_pb.Duration.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.teleport.accesslist.v1.Notifications}
 */
proto.teleport.accesslist.v1.Notifications.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.teleport.accesslist.v1.Notifications;
  return proto.teleport.accesslist.v1.Notifications.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.teleport.accesslist.v1.Notifications} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.teleport.accesslist.v1.Notifications}
 */
proto.teleport.accesslist.v1.Notifications.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new google_protobuf_duration_pb.Duration;
      reader.readMessage(value,google_protobuf_duration_pb.Duration.deserializeBinaryFromReader);
      msg.setStart(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.teleport.accesslist.v1.Notifications.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.teleport.accesslist.v1.Notifications.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.teleport.accesslist.v1.Notifications} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.teleport.accesslist.v1.Notifications.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getStart();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      google_protobuf_duration_pb.Duration.serializeBinaryToWriter
    );
  }
};


/**
 * optional google.protobuf.Duration start = 1;
 * @return {?proto.google.protobuf.Duration}
 */
proto.teleport.accesslist.v1.Notifications.prototype.getStart = function() {
  return /** @type{?proto.google.protobuf.Duration} */ (
    jspb.Message.getWrapperField(this, google_protobuf_duration_pb.Duration, 1));
};


/**
 * @param {?proto.google.protobuf.Duration|undefined} value
 * @return {!proto.teleport.accesslist.v1.Notifications} returns this
*/
proto.teleport.accesslist.v1.Notifications.prototype.setStart = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.teleport.accesslist.v1.Notifications} returns this
 */
proto.teleport.accesslist.v1.Notifications.prototype.clearStart = function() {
  return this.setStart(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.teleport.accesslist.v1.Notifications.prototype.hasStart = function() {
  return jspb.Message.getField(this, 1) != null;
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.teleport.accesslist.v1.AccessListRequires.repeatedFields_ = [1,2];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.teleport.accesslist.v1.AccessListRequires.prototype.toObject = function(opt_includeInstance) {
  return proto.teleport.accesslist.v1.AccessListRequires.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.teleport.accesslist.v1.AccessListRequires} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.teleport.accesslist.v1.AccessListRequires.toObject = function(includeInstance, msg) {
  var f, obj = {
    rolesList: (f = jspb.Message.getRepeatedField(msg, 1)) == null ? undefined : f,
    traitsList: jspb.Message.toObjectList(msg.getTraitsList(),
    teleport_trait_v1_trait_pb.Trait.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.teleport.accesslist.v1.AccessListRequires}
 */
proto.teleport.accesslist.v1.AccessListRequires.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.teleport.accesslist.v1.AccessListRequires;
  return proto.teleport.accesslist.v1.AccessListRequires.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.teleport.accesslist.v1.AccessListRequires} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.teleport.accesslist.v1.AccessListRequires}
 */
proto.teleport.accesslist.v1.AccessListRequires.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.addRoles(value);
      break;
    case 2:
      var value = new teleport_trait_v1_trait_pb.Trait;
      reader.readMessage(value,teleport_trait_v1_trait_pb.Trait.deserializeBinaryFromReader);
      msg.addTraits(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.teleport.accesslist.v1.AccessListRequires.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.teleport.accesslist.v1.AccessListRequires.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.teleport.accesslist.v1.AccessListRequires} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.teleport.accesslist.v1.AccessListRequires.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getRolesList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      1,
      f
    );
  }
  f = message.getTraitsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      2,
      f,
      teleport_trait_v1_trait_pb.Trait.serializeBinaryToWriter
    );
  }
};


/**
 * repeated string roles = 1;
 * @return {!Array<string>}
 */
proto.teleport.accesslist.v1.AccessListRequires.prototype.getRolesList = function() {
  return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 1));
};


/**
 * @param {!Array<string>} value
 * @return {!proto.teleport.accesslist.v1.AccessListRequires} returns this
 */
proto.teleport.accesslist.v1.AccessListRequires.prototype.setRolesList = function(value) {
  return jspb.Message.setField(this, 1, value || []);
};


/**
 * @param {string} value
 * @param {number=} opt_index
 * @return {!proto.teleport.accesslist.v1.AccessListRequires} returns this
 */
proto.teleport.accesslist.v1.AccessListRequires.prototype.addRoles = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 1, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.teleport.accesslist.v1.AccessListRequires} returns this
 */
proto.teleport.accesslist.v1.AccessListRequires.prototype.clearRolesList = function() {
  return this.setRolesList([]);
};


/**
 * repeated teleport.trait.v1.Trait traits = 2;
 * @return {!Array<!proto.teleport.trait.v1.Trait>}
 */
proto.teleport.accesslist.v1.AccessListRequires.prototype.getTraitsList = function() {
  return /** @type{!Array<!proto.teleport.trait.v1.Trait>} */ (
    jspb.Message.getRepeatedWrapperField(this, teleport_trait_v1_trait_pb.Trait, 2));
};


/**
 * @param {!Array<!proto.teleport.trait.v1.Trait>} value
 * @return {!proto.teleport.accesslist.v1.AccessListRequires} returns this
*/
proto.teleport.accesslist.v1.AccessListRequires.prototype.setTraitsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 2, value);
};


/**
 * @param {!proto.teleport.trait.v1.Trait=} opt_value
 * @param {number=} opt_index
 * @return {!proto.teleport.trait.v1.Trait}
 */
proto.teleport.accesslist.v1.AccessListRequires.prototype.addTraits = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 2, opt_value, proto.teleport.trait.v1.Trait, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.teleport.accesslist.v1.AccessListRequires} returns this
 */
proto.teleport.accesslist.v1.AccessListRequires.prototype.clearTraitsList = function() {
  return this.setTraitsList([]);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.teleport.accesslist.v1.AccessListGrants.repeatedFields_ = [1,2];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.teleport.accesslist.v1.AccessListGrants.prototype.toObject = function(opt_includeInstance) {
  return proto.teleport.accesslist.v1.AccessListGrants.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.teleport.accesslist.v1.AccessListGrants} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.teleport.accesslist.v1.AccessListGrants.toObject = function(includeInstance, msg) {
  var f, obj = {
    rolesList: (f = jspb.Message.getRepeatedField(msg, 1)) == null ? undefined : f,
    traitsList: jspb.Message.toObjectList(msg.getTraitsList(),
    teleport_trait_v1_trait_pb.Trait.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.teleport.accesslist.v1.AccessListGrants}
 */
proto.teleport.accesslist.v1.AccessListGrants.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.teleport.accesslist.v1.AccessListGrants;
  return proto.teleport.accesslist.v1.AccessListGrants.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.teleport.accesslist.v1.AccessListGrants} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.teleport.accesslist.v1.AccessListGrants}
 */
proto.teleport.accesslist.v1.AccessListGrants.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.addRoles(value);
      break;
    case 2:
      var value = new teleport_trait_v1_trait_pb.Trait;
      reader.readMessage(value,teleport_trait_v1_trait_pb.Trait.deserializeBinaryFromReader);
      msg.addTraits(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.teleport.accesslist.v1.AccessListGrants.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.teleport.accesslist.v1.AccessListGrants.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.teleport.accesslist.v1.AccessListGrants} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.teleport.accesslist.v1.AccessListGrants.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getRolesList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      1,
      f
    );
  }
  f = message.getTraitsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      2,
      f,
      teleport_trait_v1_trait_pb.Trait.serializeBinaryToWriter
    );
  }
};


/**
 * repeated string roles = 1;
 * @return {!Array<string>}
 */
proto.teleport.accesslist.v1.AccessListGrants.prototype.getRolesList = function() {
  return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 1));
};


/**
 * @param {!Array<string>} value
 * @return {!proto.teleport.accesslist.v1.AccessListGrants} returns this
 */
proto.teleport.accesslist.v1.AccessListGrants.prototype.setRolesList = function(value) {
  return jspb.Message.setField(this, 1, value || []);
};


/**
 * @param {string} value
 * @param {number=} opt_index
 * @return {!proto.teleport.accesslist.v1.AccessListGrants} returns this
 */
proto.teleport.accesslist.v1.AccessListGrants.prototype.addRoles = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 1, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.teleport.accesslist.v1.AccessListGrants} returns this
 */
proto.teleport.accesslist.v1.AccessListGrants.prototype.clearRolesList = function() {
  return this.setRolesList([]);
};


/**
 * repeated teleport.trait.v1.Trait traits = 2;
 * @return {!Array<!proto.teleport.trait.v1.Trait>}
 */
proto.teleport.accesslist.v1.AccessListGrants.prototype.getTraitsList = function() {
  return /** @type{!Array<!proto.teleport.trait.v1.Trait>} */ (
    jspb.Message.getRepeatedWrapperField(this, teleport_trait_v1_trait_pb.Trait, 2));
};


/**
 * @param {!Array<!proto.teleport.trait.v1.Trait>} value
 * @return {!proto.teleport.accesslist.v1.AccessListGrants} returns this
*/
proto.teleport.accesslist.v1.AccessListGrants.prototype.setTraitsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 2, value);
};


/**
 * @param {!proto.teleport.trait.v1.Trait=} opt_value
 * @param {number=} opt_index
 * @return {!proto.teleport.trait.v1.Trait}
 */
proto.teleport.accesslist.v1.AccessListGrants.prototype.addTraits = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 2, opt_value, proto.teleport.trait.v1.Trait, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.teleport.accesslist.v1.AccessListGrants} returns this
 */
proto.teleport.accesslist.v1.AccessListGrants.prototype.clearTraitsList = function() {
  return this.setTraitsList([]);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.teleport.accesslist.v1.Member.prototype.toObject = function(opt_includeInstance) {
  return proto.teleport.accesslist.v1.Member.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.teleport.accesslist.v1.Member} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.teleport.accesslist.v1.Member.toObject = function(includeInstance, msg) {
  var f, obj = {
    header: (f = msg.getHeader()) && teleport_header_v1_resourceheader_pb.ResourceHeader.toObject(includeInstance, f),
    spec: (f = msg.getSpec()) && proto.teleport.accesslist.v1.MemberSpec.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.teleport.accesslist.v1.Member}
 */
proto.teleport.accesslist.v1.Member.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.teleport.accesslist.v1.Member;
  return proto.teleport.accesslist.v1.Member.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.teleport.accesslist.v1.Member} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.teleport.accesslist.v1.Member}
 */
proto.teleport.accesslist.v1.Member.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new teleport_header_v1_resourceheader_pb.ResourceHeader;
      reader.readMessage(value,teleport_header_v1_resourceheader_pb.ResourceHeader.deserializeBinaryFromReader);
      msg.setHeader(value);
      break;
    case 2:
      var value = new proto.teleport.accesslist.v1.MemberSpec;
      reader.readMessage(value,proto.teleport.accesslist.v1.MemberSpec.deserializeBinaryFromReader);
      msg.setSpec(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.teleport.accesslist.v1.Member.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.teleport.accesslist.v1.Member.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.teleport.accesslist.v1.Member} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.teleport.accesslist.v1.Member.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getHeader();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      teleport_header_v1_resourceheader_pb.ResourceHeader.serializeBinaryToWriter
    );
  }
  f = message.getSpec();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.teleport.accesslist.v1.MemberSpec.serializeBinaryToWriter
    );
  }
};


/**
 * optional teleport.header.v1.ResourceHeader header = 1;
 * @return {?proto.teleport.header.v1.ResourceHeader}
 */
proto.teleport.accesslist.v1.Member.prototype.getHeader = function() {
  return /** @type{?proto.teleport.header.v1.ResourceHeader} */ (
    jspb.Message.getWrapperField(this, teleport_header_v1_resourceheader_pb.ResourceHeader, 1));
};


/**
 * @param {?proto.teleport.header.v1.ResourceHeader|undefined} value
 * @return {!proto.teleport.accesslist.v1.Member} returns this
*/
proto.teleport.accesslist.v1.Member.prototype.setHeader = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.teleport.accesslist.v1.Member} returns this
 */
proto.teleport.accesslist.v1.Member.prototype.clearHeader = function() {
  return this.setHeader(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.teleport.accesslist.v1.Member.prototype.hasHeader = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional MemberSpec spec = 2;
 * @return {?proto.teleport.accesslist.v1.MemberSpec}
 */
proto.teleport.accesslist.v1.Member.prototype.getSpec = function() {
  return /** @type{?proto.teleport.accesslist.v1.MemberSpec} */ (
    jspb.Message.getWrapperField(this, proto.teleport.accesslist.v1.MemberSpec, 2));
};


/**
 * @param {?proto.teleport.accesslist.v1.MemberSpec|undefined} value
 * @return {!proto.teleport.accesslist.v1.Member} returns this
*/
proto.teleport.accesslist.v1.Member.prototype.setSpec = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.teleport.accesslist.v1.Member} returns this
 */
proto.teleport.accesslist.v1.Member.prototype.clearSpec = function() {
  return this.setSpec(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.teleport.accesslist.v1.Member.prototype.hasSpec = function() {
  return jspb.Message.getField(this, 2) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.teleport.accesslist.v1.MemberSpec.prototype.toObject = function(opt_includeInstance) {
  return proto.teleport.accesslist.v1.MemberSpec.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.teleport.accesslist.v1.MemberSpec} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.teleport.accesslist.v1.MemberSpec.toObject = function(includeInstance, msg) {
  var f, obj = {
    accessList: jspb.Message.getFieldWithDefault(msg, 1, ""),
    name: jspb.Message.getFieldWithDefault(msg, 2, ""),
    joined: (f = msg.getJoined()) && google_protobuf_timestamp_pb.Timestamp.toObject(includeInstance, f),
    expires: (f = msg.getExpires()) && google_protobuf_timestamp_pb.Timestamp.toObject(includeInstance, f),
    reason: jspb.Message.getFieldWithDefault(msg, 5, ""),
    addedBy: jspb.Message.getFieldWithDefault(msg, 6, ""),
    ineligibleStatus: jspb.Message.getFieldWithDefault(msg, 7, 0),
    membership: jspb.Message.getFieldWithDefault(msg, 8, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.teleport.accesslist.v1.MemberSpec}
 */
proto.teleport.accesslist.v1.MemberSpec.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.teleport.accesslist.v1.MemberSpec;
  return proto.teleport.accesslist.v1.MemberSpec.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.teleport.accesslist.v1.MemberSpec} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.teleport.accesslist.v1.MemberSpec}
 */
proto.teleport.accesslist.v1.MemberSpec.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setAccessList(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setName(value);
      break;
    case 3:
      var value = new google_protobuf_timestamp_pb.Timestamp;
      reader.readMessage(value,google_protobuf_timestamp_pb.Timestamp.deserializeBinaryFromReader);
      msg.setJoined(value);
      break;
    case 4:
      var value = new google_protobuf_timestamp_pb.Timestamp;
      reader.readMessage(value,google_protobuf_timestamp_pb.Timestamp.deserializeBinaryFromReader);
      msg.setExpires(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setReason(value);
      break;
    case 6:
      var value = /** @type {string} */ (reader.readString());
      msg.setAddedBy(value);
      break;
    case 7:
      var value = /** @type {!proto.teleport.accesslist.v1.IneligibleStatus} */ (reader.readEnum());
      msg.setIneligibleStatus(value);
      break;
    case 8:
      var value = /** @type {string} */ (reader.readString());
      msg.setMembership(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.teleport.accesslist.v1.MemberSpec.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.teleport.accesslist.v1.MemberSpec.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.teleport.accesslist.v1.MemberSpec} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.teleport.accesslist.v1.MemberSpec.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getAccessList();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getName();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getJoined();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      google_protobuf_timestamp_pb.Timestamp.serializeBinaryToWriter
    );
  }
  f = message.getExpires();
  if (f != null) {
    writer.writeMessage(
      4,
      f,
      google_protobuf_timestamp_pb.Timestamp.serializeBinaryToWriter
    );
  }
  f = message.getReason();
  if (f.length > 0) {
    writer.writeString(
      5,
      f
    );
  }
  f = message.getAddedBy();
  if (f.length > 0) {
    writer.writeString(
      6,
      f
    );
  }
  f = message.getIneligibleStatus();
  if (f !== 0.0) {
    writer.writeEnum(
      7,
      f
    );
  }
  f = message.getMembership();
  if (f.length > 0) {
    writer.writeString(
      8,
      f
    );
  }
};


/**
 * optional string access_list = 1;
 * @return {string}
 */
proto.teleport.accesslist.v1.MemberSpec.prototype.getAccessList = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.teleport.accesslist.v1.MemberSpec} returns this
 */
proto.teleport.accesslist.v1.MemberSpec.prototype.setAccessList = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string name = 2;
 * @return {string}
 */
proto.teleport.accesslist.v1.MemberSpec.prototype.getName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.teleport.accesslist.v1.MemberSpec} returns this
 */
proto.teleport.accesslist.v1.MemberSpec.prototype.setName = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional google.protobuf.Timestamp joined = 3;
 * @return {?proto.google.protobuf.Timestamp}
 */
proto.teleport.accesslist.v1.MemberSpec.prototype.getJoined = function() {
  return /** @type{?proto.google.protobuf.Timestamp} */ (
    jspb.Message.getWrapperField(this, google_protobuf_timestamp_pb.Timestamp, 3));
};


/**
 * @param {?proto.google.protobuf.Timestamp|undefined} value
 * @return {!proto.teleport.accesslist.v1.MemberSpec} returns this
*/
proto.teleport.accesslist.v1.MemberSpec.prototype.setJoined = function(value) {
  return jspb.Message.setWrapperField(this, 3, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.teleport.accesslist.v1.MemberSpec} returns this
 */
proto.teleport.accesslist.v1.MemberSpec.prototype.clearJoined = function() {
  return this.setJoined(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.teleport.accesslist.v1.MemberSpec.prototype.hasJoined = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional google.protobuf.Timestamp expires = 4;
 * @return {?proto.google.protobuf.Timestamp}
 */
proto.teleport.accesslist.v1.MemberSpec.prototype.getExpires = function() {
  return /** @type{?proto.google.protobuf.Timestamp} */ (
    jspb.Message.getWrapperField(this, google_protobuf_timestamp_pb.Timestamp, 4));
};


/**
 * @param {?proto.google.protobuf.Timestamp|undefined} value
 * @return {!proto.teleport.accesslist.v1.MemberSpec} returns this
*/
proto.teleport.accesslist.v1.MemberSpec.prototype.setExpires = function(value) {
  return jspb.Message.setWrapperField(this, 4, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.teleport.accesslist.v1.MemberSpec} returns this
 */
proto.teleport.accesslist.v1.MemberSpec.prototype.clearExpires = function() {
  return this.setExpires(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.teleport.accesslist.v1.MemberSpec.prototype.hasExpires = function() {
  return jspb.Message.getField(this, 4) != null;
};


/**
 * optional string reason = 5;
 * @return {string}
 */
proto.teleport.accesslist.v1.MemberSpec.prototype.getReason = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/**
 * @param {string} value
 * @return {!proto.teleport.accesslist.v1.MemberSpec} returns this
 */
proto.teleport.accesslist.v1.MemberSpec.prototype.setReason = function(value) {
  return jspb.Message.setProto3StringField(this, 5, value);
};


/**
 * optional string added_by = 6;
 * @return {string}
 */
proto.teleport.accesslist.v1.MemberSpec.prototype.getAddedBy = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 6, ""));
};


/**
 * @param {string} value
 * @return {!proto.teleport.accesslist.v1.MemberSpec} returns this
 */
proto.teleport.accesslist.v1.MemberSpec.prototype.setAddedBy = function(value) {
  return jspb.Message.setProto3StringField(this, 6, value);
};


/**
 * optional IneligibleStatus ineligible_status = 7;
 * @return {!proto.teleport.accesslist.v1.IneligibleStatus}
 */
proto.teleport.accesslist.v1.MemberSpec.prototype.getIneligibleStatus = function() {
  return /** @type {!proto.teleport.accesslist.v1.IneligibleStatus} */ (jspb.Message.getFieldWithDefault(this, 7, 0));
};


/**
 * @param {!proto.teleport.accesslist.v1.IneligibleStatus} value
 * @return {!proto.teleport.accesslist.v1.MemberSpec} returns this
 */
proto.teleport.accesslist.v1.MemberSpec.prototype.setIneligibleStatus = function(value) {
  return jspb.Message.setProto3EnumField(this, 7, value);
};


/**
 * optional string membership = 8;
 * @return {string}
 */
proto.teleport.accesslist.v1.MemberSpec.prototype.getMembership = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 8, ""));
};


/**
 * @param {string} value
 * @return {!proto.teleport.accesslist.v1.MemberSpec} returns this
 */
proto.teleport.accesslist.v1.MemberSpec.prototype.setMembership = function(value) {
  return jspb.Message.setProto3StringField(this, 8, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.teleport.accesslist.v1.Review.prototype.toObject = function(opt_includeInstance) {
  return proto.teleport.accesslist.v1.Review.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.teleport.accesslist.v1.Review} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.teleport.accesslist.v1.Review.toObject = function(includeInstance, msg) {
  var f, obj = {
    header: (f = msg.getHeader()) && teleport_header_v1_resourceheader_pb.ResourceHeader.toObject(includeInstance, f),
    spec: (f = msg.getSpec()) && proto.teleport.accesslist.v1.ReviewSpec.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.teleport.accesslist.v1.Review}
 */
proto.teleport.accesslist.v1.Review.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.teleport.accesslist.v1.Review;
  return proto.teleport.accesslist.v1.Review.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.teleport.accesslist.v1.Review} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.teleport.accesslist.v1.Review}
 */
proto.teleport.accesslist.v1.Review.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new teleport_header_v1_resourceheader_pb.ResourceHeader;
      reader.readMessage(value,teleport_header_v1_resourceheader_pb.ResourceHeader.deserializeBinaryFromReader);
      msg.setHeader(value);
      break;
    case 2:
      var value = new proto.teleport.accesslist.v1.ReviewSpec;
      reader.readMessage(value,proto.teleport.accesslist.v1.ReviewSpec.deserializeBinaryFromReader);
      msg.setSpec(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.teleport.accesslist.v1.Review.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.teleport.accesslist.v1.Review.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.teleport.accesslist.v1.Review} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.teleport.accesslist.v1.Review.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getHeader();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      teleport_header_v1_resourceheader_pb.ResourceHeader.serializeBinaryToWriter
    );
  }
  f = message.getSpec();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.teleport.accesslist.v1.ReviewSpec.serializeBinaryToWriter
    );
  }
};


/**
 * optional teleport.header.v1.ResourceHeader header = 1;
 * @return {?proto.teleport.header.v1.ResourceHeader}
 */
proto.teleport.accesslist.v1.Review.prototype.getHeader = function() {
  return /** @type{?proto.teleport.header.v1.ResourceHeader} */ (
    jspb.Message.getWrapperField(this, teleport_header_v1_resourceheader_pb.ResourceHeader, 1));
};


/**
 * @param {?proto.teleport.header.v1.ResourceHeader|undefined} value
 * @return {!proto.teleport.accesslist.v1.Review} returns this
*/
proto.teleport.accesslist.v1.Review.prototype.setHeader = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.teleport.accesslist.v1.Review} returns this
 */
proto.teleport.accesslist.v1.Review.prototype.clearHeader = function() {
  return this.setHeader(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.teleport.accesslist.v1.Review.prototype.hasHeader = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional ReviewSpec spec = 2;
 * @return {?proto.teleport.accesslist.v1.ReviewSpec}
 */
proto.teleport.accesslist.v1.Review.prototype.getSpec = function() {
  return /** @type{?proto.teleport.accesslist.v1.ReviewSpec} */ (
    jspb.Message.getWrapperField(this, proto.teleport.accesslist.v1.ReviewSpec, 2));
};


/**
 * @param {?proto.teleport.accesslist.v1.ReviewSpec|undefined} value
 * @return {!proto.teleport.accesslist.v1.Review} returns this
*/
proto.teleport.accesslist.v1.Review.prototype.setSpec = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.teleport.accesslist.v1.Review} returns this
 */
proto.teleport.accesslist.v1.Review.prototype.clearSpec = function() {
  return this.setSpec(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.teleport.accesslist.v1.Review.prototype.hasSpec = function() {
  return jspb.Message.getField(this, 2) != null;
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.teleport.accesslist.v1.ReviewSpec.repeatedFields_ = [2];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.teleport.accesslist.v1.ReviewSpec.prototype.toObject = function(opt_includeInstance) {
  return proto.teleport.accesslist.v1.ReviewSpec.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.teleport.accesslist.v1.ReviewSpec} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.teleport.accesslist.v1.ReviewSpec.toObject = function(includeInstance, msg) {
  var f, obj = {
    accessList: jspb.Message.getFieldWithDefault(msg, 1, ""),
    reviewersList: (f = jspb.Message.getRepeatedField(msg, 2)) == null ? undefined : f,
    reviewDate: (f = msg.getReviewDate()) && google_protobuf_timestamp_pb.Timestamp.toObject(includeInstance, f),
    notes: jspb.Message.getFieldWithDefault(msg, 4, ""),
    changes: (f = msg.getChanges()) && proto.teleport.accesslist.v1.ReviewChanges.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.teleport.accesslist.v1.ReviewSpec}
 */
proto.teleport.accesslist.v1.ReviewSpec.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.teleport.accesslist.v1.ReviewSpec;
  return proto.teleport.accesslist.v1.ReviewSpec.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.teleport.accesslist.v1.ReviewSpec} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.teleport.accesslist.v1.ReviewSpec}
 */
proto.teleport.accesslist.v1.ReviewSpec.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setAccessList(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.addReviewers(value);
      break;
    case 3:
      var value = new google_protobuf_timestamp_pb.Timestamp;
      reader.readMessage(value,google_protobuf_timestamp_pb.Timestamp.deserializeBinaryFromReader);
      msg.setReviewDate(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setNotes(value);
      break;
    case 5:
      var value = new proto.teleport.accesslist.v1.ReviewChanges;
      reader.readMessage(value,proto.teleport.accesslist.v1.ReviewChanges.deserializeBinaryFromReader);
      msg.setChanges(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.teleport.accesslist.v1.ReviewSpec.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.teleport.accesslist.v1.ReviewSpec.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.teleport.accesslist.v1.ReviewSpec} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.teleport.accesslist.v1.ReviewSpec.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getAccessList();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getReviewersList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      2,
      f
    );
  }
  f = message.getReviewDate();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      google_protobuf_timestamp_pb.Timestamp.serializeBinaryToWriter
    );
  }
  f = message.getNotes();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
  f = message.getChanges();
  if (f != null) {
    writer.writeMessage(
      5,
      f,
      proto.teleport.accesslist.v1.ReviewChanges.serializeBinaryToWriter
    );
  }
};


/**
 * optional string access_list = 1;
 * @return {string}
 */
proto.teleport.accesslist.v1.ReviewSpec.prototype.getAccessList = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.teleport.accesslist.v1.ReviewSpec} returns this
 */
proto.teleport.accesslist.v1.ReviewSpec.prototype.setAccessList = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * repeated string reviewers = 2;
 * @return {!Array<string>}
 */
proto.teleport.accesslist.v1.ReviewSpec.prototype.getReviewersList = function() {
  return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 2));
};


/**
 * @param {!Array<string>} value
 * @return {!proto.teleport.accesslist.v1.ReviewSpec} returns this
 */
proto.teleport.accesslist.v1.ReviewSpec.prototype.setReviewersList = function(value) {
  return jspb.Message.setField(this, 2, value || []);
};


/**
 * @param {string} value
 * @param {number=} opt_index
 * @return {!proto.teleport.accesslist.v1.ReviewSpec} returns this
 */
proto.teleport.accesslist.v1.ReviewSpec.prototype.addReviewers = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 2, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.teleport.accesslist.v1.ReviewSpec} returns this
 */
proto.teleport.accesslist.v1.ReviewSpec.prototype.clearReviewersList = function() {
  return this.setReviewersList([]);
};


/**
 * optional google.protobuf.Timestamp review_date = 3;
 * @return {?proto.google.protobuf.Timestamp}
 */
proto.teleport.accesslist.v1.ReviewSpec.prototype.getReviewDate = function() {
  return /** @type{?proto.google.protobuf.Timestamp} */ (
    jspb.Message.getWrapperField(this, google_protobuf_timestamp_pb.Timestamp, 3));
};


/**
 * @param {?proto.google.protobuf.Timestamp|undefined} value
 * @return {!proto.teleport.accesslist.v1.ReviewSpec} returns this
*/
proto.teleport.accesslist.v1.ReviewSpec.prototype.setReviewDate = function(value) {
  return jspb.Message.setWrapperField(this, 3, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.teleport.accesslist.v1.ReviewSpec} returns this
 */
proto.teleport.accesslist.v1.ReviewSpec.prototype.clearReviewDate = function() {
  return this.setReviewDate(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.teleport.accesslist.v1.ReviewSpec.prototype.hasReviewDate = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional string notes = 4;
 * @return {string}
 */
proto.teleport.accesslist.v1.ReviewSpec.prototype.getNotes = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.teleport.accesslist.v1.ReviewSpec} returns this
 */
proto.teleport.accesslist.v1.ReviewSpec.prototype.setNotes = function(value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};


/**
 * optional ReviewChanges changes = 5;
 * @return {?proto.teleport.accesslist.v1.ReviewChanges}
 */
proto.teleport.accesslist.v1.ReviewSpec.prototype.getChanges = function() {
  return /** @type{?proto.teleport.accesslist.v1.ReviewChanges} */ (
    jspb.Message.getWrapperField(this, proto.teleport.accesslist.v1.ReviewChanges, 5));
};


/**
 * @param {?proto.teleport.accesslist.v1.ReviewChanges|undefined} value
 * @return {!proto.teleport.accesslist.v1.ReviewSpec} returns this
*/
proto.teleport.accesslist.v1.ReviewSpec.prototype.setChanges = function(value) {
  return jspb.Message.setWrapperField(this, 5, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.teleport.accesslist.v1.ReviewSpec} returns this
 */
proto.teleport.accesslist.v1.ReviewSpec.prototype.clearChanges = function() {
  return this.setChanges(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.teleport.accesslist.v1.ReviewSpec.prototype.hasChanges = function() {
  return jspb.Message.getField(this, 5) != null;
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.teleport.accesslist.v1.ReviewChanges.repeatedFields_ = [3];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.teleport.accesslist.v1.ReviewChanges.prototype.toObject = function(opt_includeInstance) {
  return proto.teleport.accesslist.v1.ReviewChanges.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.teleport.accesslist.v1.ReviewChanges} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.teleport.accesslist.v1.ReviewChanges.toObject = function(includeInstance, msg) {
  var f, obj = {
    membershipRequirementsChanged: (f = msg.getMembershipRequirementsChanged()) && proto.teleport.accesslist.v1.AccessListRequires.toObject(includeInstance, f),
    removedMembersList: (f = jspb.Message.getRepeatedField(msg, 3)) == null ? undefined : f,
    reviewFrequencyChanged: jspb.Message.getFieldWithDefault(msg, 4, 0),
    reviewDayOfMonthChanged: jspb.Message.getFieldWithDefault(msg, 5, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.teleport.accesslist.v1.ReviewChanges}
 */
proto.teleport.accesslist.v1.ReviewChanges.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.teleport.accesslist.v1.ReviewChanges;
  return proto.teleport.accesslist.v1.ReviewChanges.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.teleport.accesslist.v1.ReviewChanges} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.teleport.accesslist.v1.ReviewChanges}
 */
proto.teleport.accesslist.v1.ReviewChanges.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 2:
      var value = new proto.teleport.accesslist.v1.AccessListRequires;
      reader.readMessage(value,proto.teleport.accesslist.v1.AccessListRequires.deserializeBinaryFromReader);
      msg.setMembershipRequirementsChanged(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.addRemovedMembers(value);
      break;
    case 4:
      var value = /** @type {!proto.teleport.accesslist.v1.ReviewFrequency} */ (reader.readEnum());
      msg.setReviewFrequencyChanged(value);
      break;
    case 5:
      var value = /** @type {!proto.teleport.accesslist.v1.ReviewDayOfMonth} */ (reader.readEnum());
      msg.setReviewDayOfMonthChanged(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.teleport.accesslist.v1.ReviewChanges.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.teleport.accesslist.v1.ReviewChanges.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.teleport.accesslist.v1.ReviewChanges} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.teleport.accesslist.v1.ReviewChanges.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getMembershipRequirementsChanged();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.teleport.accesslist.v1.AccessListRequires.serializeBinaryToWriter
    );
  }
  f = message.getRemovedMembersList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      3,
      f
    );
  }
  f = message.getReviewFrequencyChanged();
  if (f !== 0.0) {
    writer.writeEnum(
      4,
      f
    );
  }
  f = message.getReviewDayOfMonthChanged();
  if (f !== 0.0) {
    writer.writeEnum(
      5,
      f
    );
  }
};


/**
 * optional AccessListRequires membership_requirements_changed = 2;
 * @return {?proto.teleport.accesslist.v1.AccessListRequires}
 */
proto.teleport.accesslist.v1.ReviewChanges.prototype.getMembershipRequirementsChanged = function() {
  return /** @type{?proto.teleport.accesslist.v1.AccessListRequires} */ (
    jspb.Message.getWrapperField(this, proto.teleport.accesslist.v1.AccessListRequires, 2));
};


/**
 * @param {?proto.teleport.accesslist.v1.AccessListRequires|undefined} value
 * @return {!proto.teleport.accesslist.v1.ReviewChanges} returns this
*/
proto.teleport.accesslist.v1.ReviewChanges.prototype.setMembershipRequirementsChanged = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.teleport.accesslist.v1.ReviewChanges} returns this
 */
proto.teleport.accesslist.v1.ReviewChanges.prototype.clearMembershipRequirementsChanged = function() {
  return this.setMembershipRequirementsChanged(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.teleport.accesslist.v1.ReviewChanges.prototype.hasMembershipRequirementsChanged = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * repeated string removed_members = 3;
 * @return {!Array<string>}
 */
proto.teleport.accesslist.v1.ReviewChanges.prototype.getRemovedMembersList = function() {
  return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 3));
};


/**
 * @param {!Array<string>} value
 * @return {!proto.teleport.accesslist.v1.ReviewChanges} returns this
 */
proto.teleport.accesslist.v1.ReviewChanges.prototype.setRemovedMembersList = function(value) {
  return jspb.Message.setField(this, 3, value || []);
};


/**
 * @param {string} value
 * @param {number=} opt_index
 * @return {!proto.teleport.accesslist.v1.ReviewChanges} returns this
 */
proto.teleport.accesslist.v1.ReviewChanges.prototype.addRemovedMembers = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 3, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.teleport.accesslist.v1.ReviewChanges} returns this
 */
proto.teleport.accesslist.v1.ReviewChanges.prototype.clearRemovedMembersList = function() {
  return this.setRemovedMembersList([]);
};


/**
 * optional ReviewFrequency review_frequency_changed = 4;
 * @return {!proto.teleport.accesslist.v1.ReviewFrequency}
 */
proto.teleport.accesslist.v1.ReviewChanges.prototype.getReviewFrequencyChanged = function() {
  return /** @type {!proto.teleport.accesslist.v1.ReviewFrequency} */ (jspb.Message.getFieldWithDefault(this, 4, 0));
};


/**
 * @param {!proto.teleport.accesslist.v1.ReviewFrequency} value
 * @return {!proto.teleport.accesslist.v1.ReviewChanges} returns this
 */
proto.teleport.accesslist.v1.ReviewChanges.prototype.setReviewFrequencyChanged = function(value) {
  return jspb.Message.setProto3EnumField(this, 4, value);
};


/**
 * optional ReviewDayOfMonth review_day_of_month_changed = 5;
 * @return {!proto.teleport.accesslist.v1.ReviewDayOfMonth}
 */
proto.teleport.accesslist.v1.ReviewChanges.prototype.getReviewDayOfMonthChanged = function() {
  return /** @type {!proto.teleport.accesslist.v1.ReviewDayOfMonth} */ (jspb.Message.getFieldWithDefault(this, 5, 0));
};


/**
 * @param {!proto.teleport.accesslist.v1.ReviewDayOfMonth} value
 * @return {!proto.teleport.accesslist.v1.ReviewChanges} returns this
 */
proto.teleport.accesslist.v1.ReviewChanges.prototype.setReviewDayOfMonthChanged = function(value) {
  return jspb.Message.setProto3EnumField(this, 5, value);
};


/**
 * @enum {number}
 */
proto.teleport.accesslist.v1.ReviewFrequency = {
  REVIEW_FREQUENCY_UNSPECIFIED: 0,
  REVIEW_FREQUENCY_ONE_MONTH: 1,
  REVIEW_FREQUENCY_THREE_MONTHS: 3,
  REVIEW_FREQUENCY_SIX_MONTHS: 6,
  REVIEW_FREQUENCY_ONE_YEAR: 12
};

/**
 * @enum {number}
 */
proto.teleport.accesslist.v1.ReviewDayOfMonth = {
  REVIEW_DAY_OF_MONTH_UNSPECIFIED: 0,
  REVIEW_DAY_OF_MONTH_FIRST: 1,
  REVIEW_DAY_OF_MONTH_FIFTEENTH: 15,
  REVIEW_DAY_OF_MONTH_LAST: 31
};

/**
 * @enum {number}
 */
proto.teleport.accesslist.v1.IneligibleStatus = {
  INELIGIBLE_STATUS_UNSPECIFIED: 0,
  INELIGIBLE_STATUS_ELIGIBLE: 1,
  INELIGIBLE_STATUS_USER_NOT_EXIST: 2,
  INELIGIBLE_STATUS_MISSING_REQUIREMENTS: 3,
  INELIGIBLE_STATUS_EXPIRED: 4
};

goog.object.extend(exports, proto.teleport.accesslist.v1);
